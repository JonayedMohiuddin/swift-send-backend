// CART DATA
SELECT  
CI.ID AS CART_ITEM_ID, 
CI.USER_ID,
CI.PRODUCT_ID,
CI.QUANTITY,
PR.ID AS PRODUCT_ID, 
PR.SUPPLIER_ID, 
PR.CATEGORY_ID,
PR.NAME AS PRODUCT_NAME,
PR.PRICE,
PR.IMAGE_URL,
PR.DISCOUNT, 
S.NAME AS SUPPLIER_NAME,

(
    SELECT COUNT(*)
    FROM WISH_LIST WL
    WHERE WL.USER_ID = ${user.id} AND WL.PRODUCT_ID = PR.ID
) AS WISH_LIST_COUNT

FROM CART_ITEM CI
JOIN PRODUCT PR ON CI.PRODUCT_ID = PR.ID
JOIN SUPPLIER S ON PR.SUPPLIER_ID = S.ID
WHERE USER_ID = ${user.id}
ORDER BY S.NAME ASC, PR.NAME ASC



// PRODUCT PAGE
SELECT 
P.*,
C.NAME AS CATEGORY_NAME,
(
    SELECT NVL(AVG(RR.RATING), 0)
    FROM RATING_REVIEW RR
    WHERE RR.PRODUCT_ID = P.ID
) AS RATING,
(
    SELECT NVL(COUNT(RR.RATING), 0)
    FROM RATING_REVIEW RR
    WHERE RR.PRODUCT_ID = P.ID
) AS RATING_COUNT

FROM PRODUCT P 
LEFT JOIN CATEGORY C 
ON P.CATEGORY_ID = C.ID 
    
WHERE 1 = 1 
AND P.IS_DELETED = 0
${categorySearchCondition}
${nameSearchCondition}

ORDER BY RATING_COUNT DESC,RATING DESC, P.ID OFFSET ${page * product_per_page} ROWS FETCH NEXT ${product_per_page} ROWS ONLY



// PRODUCT DETAIL
SELECT 
                
C.NAME AS CATEGORY_NAME,
S.NAME AS SUPPLIER_NAME,
PR.*,

(
    SELECT NVL(AVG(RR.RATING), 0)
    FROM RATING_REVIEW RR
    WHERE RR.PRODUCT_ID = PR.ID 
) AS RATING,
(
    SELECT NVL(COUNT(RR.RATING), 0)
    FROM RATING_REVIEW RR
    WHERE RR.PRODUCT_ID = PR.ID
) AS RATING_COUNT,
(
    SELECT NVL(COUNT(ORD.QUANTITY), 0)
    FROM ORDER_ITEM ORD
    WHERE ORD.PRODUCT_ID = PR.ID 
    AND ORD.STATUS <> 'CANCELED'
) AS TOTAL_SOLD

FROM PRODUCT PR 
LEFT JOIN CATEGORY C ON PR.CATEGORY_ID = C.ID
LEFT JOIN SUPPLIER S ON PR.SUPPLIER_ID = S.ID 
WHERE PR.ID = ${req.params.id}



// PRODUCTS COUNT
SELECT COUNT(*) AS COUNT
FROM PRODUCT P 
LEFT JOIN CATEGORY C 
ON P.CATEGORY_ID = C.ID 

WHERE 1 = 1 
AND P.IS_DELETED = 0
${categorySearchCondition}
${nameSearchCondition}



// SUPLIER PRODUCTS
SELECT 
                
PR.ID AS PRODUCT_ID,
PR.NAME AS PRODUCT_NAME,
PR.PRICE AS PRODUCT_PRICE,
PR.DESCRIPTION AS PRODUCT_DESCRIPTION,
PR.IMAGE_URL AS PRODUCT_IMAGE_URL,
PR.DISCOUNT AS PRODUCT_DISCOUNT,
PR.IS_DELETED AS IS_DELETED,
(
    SELECT NVL(AVG(RR.RATING), 0)
    FROM RATING_REVIEW RR
    WHERE RR.PRODUCT_ID = PR.ID 
) AS RATING,
(
    SELECT NVL(COUNT(RR.RATING), 0)
    FROM RATING_REVIEW RR
    WHERE RR.PRODUCT_ID = PR.ID
) AS RATING_COUNT,
(
    SELECT NVL(COUNT(ORD.ID) * SUM(ORD.QUANTITY), 0)
    FROM ORDER_ITEM ORD
    WHERE ORD.PRODUCT_ID = PR.ID
) AS TOTAL_SOLD,
 
CA.ID AS CATEGORY_ID,
CA.NAME AS CATEGORY_NAME,
CA.DESCRIPTION AS CATEGORY_DESCRIPTION,
CA.IMAGE_URL AS CATEGORY_IMAGE_URL

FROM PRODUCT PR 
LEFT JOIN CATEGORY CA 
ON PR.CATEGORY_ID = CA.ID
WHERE SUPPLIER_ID = ${req.user.id}



// ORDER STATUS
SELECT 
SO.ID AS SUPPLIER_ORDER_ID,  
SO.ORDER_ITEM_ID AS ORDER_ITEM_ID,
SO.SUPPLIER_ID AS SUPPLIER_ID,
SO.STATUS AS STATUS,
SO.ADDRESS AS ADDRESS,
SO.STATUS AS STATUS,
SO.CREATED_AT AS CREATED_AT,
(
    SELECT NAME
    FROM USERS
    WHERE ID = SO.USER_ID
) AS USER_NAME,

OI.ORDER_ID AS ORDER_ID,
OI.PRODUCT_ID AS PRODUCT_ID, 
OI.QUANTITY AS QUANTITY,
OI.LAST_UPDATED_ON AS LAST_UPDATED_ON,
 
PR.NAME AS NAME,
PR.CATEGORY_ID AS CATEGORY_ID,
PR.PRICE AS PRICE,
PR.IMAGE_URL AS IMAGE_URL,
PR.DISCOUNT AS DISCOUNT,
(
    SELECT NVL(AVG(RR.RATING), 0)
    FROM RATING_REVIEW RR
    WHERE RR.PRODUCT_ID = PR.ID 
) AS RATING,
(
    SELECT NVL(COUNT(RR.RATING), 0)
    FROM RATING_REVIEW RR
    WHERE RR.PRODUCT_ID = PR.ID
) AS RATING_COUNT,
(
    SELECT NVL(COUNT(ORD.ID) * SUM(ORD.QUANTITY), 0)
    FROM ORDER_ITEM ORD
    WHERE ORD.PRODUCT_ID = PR.ID
) AS TOTAL_SOLD 

FROM SUPPLIER_ORDERS SO 
JOIN ORDER_ITEM OI
ON SO.ORDER_ITEM_ID = OI.ID
JOIN PRODUCT PR
ON OI.PRODUCT_ID = PR.ID
WHERE ${supplierId} = SO.SUPPLIER_ID
AND SO.STATUS = UPPER('${status}')  



// GET ALL ORDERS
SELECT 
SO.ID AS SUPPLIER_ORDER_ID,  
SO.ORDER_ITEM_ID AS ORDER_ITEM_ID,
SO.SUPPLIER_ID AS SUPPLIER_ID,
SO.STATUS AS STATUS,
SO.ADDRESS AS ADDRESS,
SO.STATUS AS STATUS,
SO.CREATED_AT AS CREATED_AT,

OI.ORDER_ID AS ORDER_ID,
OI.PRODUCT_ID AS PRODUCT_ID, 
OI.QUANTITY AS QUANTITY,
OI.LAST_UPDATED_ON AS LAST_UPDATED_ON,
 
PR.NAME AS NAME,
PR.CATEGORY_ID AS CATEGORY_ID,
PR.PRICE AS PRICE,
PR.IMAGE_URL AS IMAGE_URL,
PR.DISCOUNT AS DISCOUNT,

(
    SELECT NAME
    FROM USERS
    JOIN ORDERS
    ON USERS.ID = ORDERS.USER_ID
    WHERE ORDERS.ID = OI.ORDER_ID
) AS USER_NAME

FROM SUPPLIER_ORDERS SO 
JOIN ORDER_ITEM OI
ON SO.ORDER_ITEM_ID = OI.ID
JOIN PRODUCT PR
ON OI.PRODUCT_ID = PR.ID
WHERE ${supplierId} = SO.SUPPLIER_ID
ORDER BY OI.LAST_UPDATED_ON DESC, OI.ID ASC



// GET WISH_LIST
SELECT 
p.*,
(
    SELECT NVL(AVG(RR.RATING), 0)
    FROM RATING_REVIEW RR
    WHERE RR.PRODUCT_ID = P.ID
) AS RATING,
(
    SELECT NVL(COUNT(RR.RATING), 0)
    FROM RATING_REVIEW RR
    WHERE RR.PRODUCT_ID = P.ID
) AS RATING_COUNT

FROM WISH_LIST W
JOIN PRODUCT P
ON W.PRODUCT_ID = P.ID
WHERE USER_ID = :userId



// GET WISH_LIST BY ID 
SELECT *
FROM WISH_LIST W
JOIN PRODUCT P 
ON W.PRODUCT_ID = P.ID
WHERE USER_ID = :userId
AND PRODUCT_ID = :productId